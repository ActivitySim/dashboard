diff --git a/node_modules/fast-xml-parser/src/xmlparser/OrderedObjParser.js b/node_modules/fast-xml-parser/src/xmlparser/OrderedObjParser.js
index ab6fef5..90ca812 100644
--- a/node_modules/fast-xml-parser/src/xmlparser/OrderedObjParser.js
+++ b/node_modules/fast-xml-parser/src/xmlparser/OrderedObjParser.js
@@ -170,7 +170,7 @@ const parseToOrderedJsObj = function(xmlData, options) {
             , currentNode.tagname
             , jPath
             ,false
-            , currentNode.attributes ? Object.keys(currentNode.attributes).length !== 0 : false
+            , currentNode.xattributes ? Object.keys(currentNode.xattributes).length !== 0 : false
             , Object.keys(currentNode.child).length === 0);
           if(textData !== undefined &&  textData !== "") currentNode.add(options.textNodeName, textData);
           textData = "";
@@ -201,7 +201,7 @@ const parseToOrderedJsObj = function(xmlData, options) {
               , currentNode.tagname
               , jPath
               ,false
-              , currentNode.attributes ? Object.keys(currentNode.attributes).length !== 0 : false
+              , currentNode.xattributes ? Object.keys(currentNode.xattributes).length !== 0 : false
               , Object.keys(currentNode.child).length === 0);
 
             if(textData !== undefined &&  textData !== "") currentNode.add(options.textNodeName, textData);
@@ -228,7 +228,7 @@ const parseToOrderedJsObj = function(xmlData, options) {
             , currentNode.tagname
             , jPath
             ,false
-            , currentNode.attributes ? Object.keys(currentNode.attributes).length !== 0 : false
+            , currentNode.xattributes ? Object.keys(currentNode.xattributes).length !== 0 : false
             , Object.keys(currentNode.child).length === 0);
 
           if(textData !== undefined &&  textData !== "") currentNode.add(options.textNodeName, textData);
@@ -276,7 +276,7 @@ const parseToOrderedJsObj = function(xmlData, options) {
               , currentNode.tagname
               , jPath
               , false
-              , currentNode.attributes ? Object.keys(currentNode.attributes).length !== 0 : false
+              , currentNode.xattributes ? Object.keys(currentNode.xattributes).length !== 0 : false
               , false);
             if(textData !== undefined &&  textData !== "") currentNode.add(options.textNodeName, textData);
             textData = "";
@@ -299,7 +299,7 @@ const parseToOrderedJsObj = function(xmlData, options) {
 
           const childNode = new xmlNode(tagName);
           if(tagName !== tagExp && shouldBuildAttributesMap){
-            childNode.attributes = buildAttributesMap(tagExp, jPath , options);
+            childNode.xattributes = buildAttributesMap(tagExp, jPath , options);
           }
           jPath = jPath.substr(0, jPath.lastIndexOf("."));
           // tagsNodeStack.push(currentNode);
@@ -311,7 +311,7 @@ const parseToOrderedJsObj = function(xmlData, options) {
 
           const childNode = new xmlNode(tagName);
           if(tagName !== tagExp && shouldBuildAttributesMap){
-            childNode.attributes = buildAttributesMap(tagExp, jPath , options);
+            childNode.xattributes = buildAttributesMap(tagExp, jPath , options);
           }
           jPath = jPath.substr(0, jPath.lastIndexOf("."));
           // tagsNodeStack.push(currentNode);
@@ -326,7 +326,7 @@ const parseToOrderedJsObj = function(xmlData, options) {
           childNode.startIndex=closeIndex; //for further processing
 
           if(tagName !== tagExp && shouldBuildAttributesMap){
-            childNode.attributes = buildAttributesMap(tagExp, jPath, options);
+            childNode.xattributes = buildAttributesMap(tagExp, jPath, options);
           }
           currentNode.addChild(childNode);
           currentNode = childNode;
diff --git a/node_modules/fast-xml-parser/src/xmlparser/node2json.js b/node_modules/fast-xml-parser/src/xmlparser/node2json.js
index 3a95283..4f17f57 100644
--- a/node_modules/fast-xml-parser/src/xmlparser/node2json.js
+++ b/node_modules/fast-xml-parser/src/xmlparser/node2json.js
@@ -37,8 +37,8 @@ function compress(arr, options, jPath){
       let val = compress(tagObj[property], options, newJpath);
       const isLeaf = isLeafTag(val, options);
 
-      if(tagObj.attributes){
-        assignAttributes( val, tagObj.attributes, newJpath, options);
+      if(tagObj.xattributes){
+        assignAttributes( val, tagObj.xattributes, newJpath, options);
       }else if(Object.keys(val).length === 1 && val[options.textNodeName] !== undefined && !options.alwaysCreateTextNode){
         val = val[options.textNodeName];
       }else if(Object.keys(val).length === 0){
@@ -74,7 +74,7 @@ function propName(obj){
   const keys = Object.keys(obj);
   for (let i = 0; i < keys.length; i++) {
     const key = keys[i];
-    if(key !== "attributes") return key;
+    if(key !== "xattributes") return key;
   }
 }
 
diff --git a/node_modules/fast-xml-parser/src/xmlparser/xmlNode.js b/node_modules/fast-xml-parser/src/xmlparser/xmlNode.js
index 3e758cd..ef05625 100644
--- a/node_modules/fast-xml-parser/src/xmlparser/xmlNode.js
+++ b/node_modules/fast-xml-parser/src/xmlparser/xmlNode.js
@@ -4,15 +4,15 @@ class XmlNode{
   constructor(tagname) {
     this.tagname = tagname;
     this.child = []; //nested tags, text, cdata, comments in order
-    this.attributes = {}; //attributes map
+    this.xattributes = {}; //attributes map
   }
   add(key,val){
     // this.child.push( {name : key, val: val, isCdata: isCdata });
     this.child.push( {[key]: val });
   }
   addChild(node) {
-    if(node.attributes && Object.keys(node.attributes).length > 0){
-      this.child.push( { [node.tagname]: node.child, attributes: node.attributes });
+    if(node.xattributes && Object.keys(node.xattributes).length > 0){
+      this.child.push( { [node.tagname]: node.child, xattributes: node.xattributes });
     }else{
       this.child.push( { [node.tagname]: node.child });
     }
